@page
@model VentasChart.Pages.chartsModel

<div class="container-fluid text-center">
    <h1>Gráficos tienda</h1>
    <p>de @Model.Articulos.Count() artículos hay @Model.NumeroFamilias familias de artículos.</p>
    <p>Mostrando la cantidad de artículos por familia:</p>
    <div height="500" width="500">
        <canvas id="myChart"></canvas>
    </div>

</div>
<div class="container-fluid text-center">
    <button class="btn btn-primary" id="resetButton">Reset</button>
    <button class="btn btn-primary" id="hideButton">Hide</button>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.0/Chart.js"></script>
<script>
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color + "80";
    }

    var backgroundColors = [];
    for (var i = 0; i < @Model.NumeroFamilias; i++) {
        backgroundColors.push(getRandomColor());
    }

    var ctx = document.getElementById("myChart").getContext("2d");
    var myChart = new Chart(ctx, {
        type: "doughnut",
        data: {
            labels: Array.from({ length: @Model.NumeroFamilias }, (_, i) => `Familia ${i + 1}`),
            datasets: [{
                label: 'Datos', data: [@Model.DatosPorFamilia],
                backgroundColor: backgroundColors
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var bars = myChart.getDatasetMeta(0).data;

    bars.forEach(function (bar, index) {
        bar._index = index;
    });

    var hiddenBars = [];

    myChart.update();

    myChart.canvas.addEventListener("click", function (e) {
        var clickedBar = myChart.getElementAtEvent(e)[0];

        if (clickedBar) {
            var index = clickedBar._index;
            if (hiddenBars.includes(index)) {
                hiddenBars.splice(hiddenBars.indexOf(index), 1);
                clickedBar.hidden = false;
            } else {
                hiddenBars.push(index);
                clickedBar.hidden = true;
            }
        }

        myChart.update();
    });

    var resetButton = document.getElementById("resetButton");
    resetButton.addEventListener("click", function () {
        bars.forEach(function (bar, index) {
            if (!hiddenBars.includes(index)) {
                bar.hidden = false;
            }
        });
        hiddenBars = [];
        myChart.update();
    });


    var hideButton = document.getElementById("hideButton");
    hideButton.addEventListener("click", function () {
        bars.forEach(function (bar) {
            bar.hidden = true;
        });
        myChart.update();
    });


</script>
